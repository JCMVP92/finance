# -*- coding: utf-8 -*-
"""Copia de FINAL_290622.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1F6EAttknOmdTT6By-7mqw1X_7dd7-2v5
"""

# Commented out IPython magic to ensure Python compatibility.
import json
import pandas as pd
import numpy as np
import requests

!pip install requests
!pip install yfinance
import yfinance as yf

import matplotlib.pyplot as plt
# %matplotlib inline 
import seaborn as sns

#HistoryTSLA
tsla = [
            "TSLA"
]

recolector = []
for nemo  in tsla:
  ticker = yf.Ticker(nemo)
  px = ticker.history(period="5y")
  px.name = nemo
  
  recolector += [px]

history = pd.concat(recolector, axis = 1)

history

history['Close'].plot(title="TSLA´s STOCK PRICE", color="r")

#FinancialsTSLA
tsla = [
            "TSLA"
]

recolector = []
for nemo  in tsla:
  ticker = yf.Ticker(nemo)
  px = ticker.financials
  px.name = nemo
  
  recolector += [px]

finanzas = pd.concat(recolector, axis = 1)
finanzas

#GananciasHistoricoTSLA


tsla = [
            "TSLA"
]

recolector = []
for nemo  in tsla:
  ticker = yf.Ticker(nemo)
  px = ticker.earnings_dates
  px.name = nemo
  
  recolector += [px]

earnings_dates = pd.concat(recolector, axis = 1)
earnings_dates

#GananciasTimestralesTSLA


tsla = [
            "TSLA"
]

recolector = []
for nemo  in tsla:
  ticker = yf.Ticker(nemo)
  px = ticker.quarterly_earnings
  px.name = nemo
  
  recolector += [px]

quarterly_cashflow = pd.concat(recolector, axis = 1)
quarterly_cashflow

#InstitucionalHoldersTSLA


tsla = [
            "TSLA"
]

recolector = []
for nemo  in tsla:
  ticker = yf.Ticker(nemo)
  px = ticker.institutional_holders
  px.name = nemo
  
  recolector += [px]

institutional_holders = pd.concat(recolector, axis = 1)
institutional_holders

#RecommendationsTSLA
tsla = [
            "TSLA"
]

recolector = []
for nemo  in tsla:
  ticker = yf.Ticker(nemo)
  px = ticker.recommendations
  px.name = nemo
  
  recolector += [px]

recommendations = pd.concat(recolector, axis = 1)
recommendations

"""### **APPLE**
---
"""

#HistoryAAPL

aapl = [
            "AAPL"
]

recolector = []
for nemoaa  in aapl:
  ticker = yf.Ticker(nemoaa)
  pxaa = ticker.history(period="5y")
  pxaa.name = nemoaa
  
  recolector += [pxaa]

historyAA = pd.concat(recolector, axis = 1)

historyAA

historyAA['Close'].plot(title="AAPL´s STOCK PRICE", color="b")

#FinancialsAAPL
aapl = [
            "AAPL"
]

recolector = []
for nemoaa  in aapl:
  ticker = yf.Ticker(nemoaa)
  pxaa = ticker.financials
  pxaa.name = nemoaa
  
  recolector += [pxaa]

finanzasAA = pd.concat(recolector, axis = 1)
finanzasAA

#GananciasHistoricoAAPL


aapl = [
            "AAPL"
]

recolector = []
for nemoaa  in aapl:
  ticker = yf.Ticker(nemoaa)
  pxaa = ticker.earnings_dates
  pxaa.name = nemoaa
  
  recolector += [pxaa]

earnings_datesAA = pd.concat(recolector, axis = 1)
earnings_datesAA

#GananciasTimestralesAAPL


aapl = [
            "AAPL"
]

recolector = []
for nemoaa  in aapl:
  ticker = yf.Ticker(nemoaa)
  pxaa = ticker.quarterly_earnings
  pxaa.name = nemoaa
  
  recolector += [pxaa]

quarterly_cashflowAA = pd.concat(recolector, axis = 1)
quarterly_cashflowAA

quarterly_cashflowAA['Earnings'].plot(title="AAPL´s Earnings 21-22", color="b")

#InstitucionalHoldersAAPL


aapl = [
            "AAPL"
]

recolector = []
for nemoaa  in aapl:
  ticker = yf.Ticker(nemoaa)
  pxaa = ticker.institutional_holders
  pxaa.name = nemoaa
  
  recolector += [pxaa]

institutional_holdersAA = pd.concat(recolector, axis = 1)
institutional_holdersAA

#RecommendationsAAPL
aapl = [
            "AAPL"
]

recolector = []
for nemoaa  in aapl:
  ticker = yf.Ticker(nemoaa)
  pxaa = ticker.recommendations
  pxaa.name = nemoaa
  
  recolector += [pxaa]

recommendationsAA = pd.concat(recolector, axis = 1)
recommendationsAA

"""### **BTC-USD**
---

"""

#HistoryBTC

btc = [
            "BTC-USD"
]

recolector = []
for nemobtc  in btc:
  ticker = yf.Ticker(nemobtc)
  pxbtc = ticker.history(period="5y")
  pxbtc.name = nemobtc
  
  recolector += [pxbtc]

historybtc = pd.concat(recolector, axis = 1)

historybtc

historybtc['Close'].plot(title="BTC-USD´s STOCK PRICE", color="b")

#FinancialsBTC
btc = [
            "BTC-USD"
]

recolector = []
for nemo  in btc:
  ticker = yf.Ticker(nemo)
  px = ticker.financials
  px.name = nemo
  
  recolector += [px]

finanzasbtc = pd.concat(recolector, axis = 1)
finanzasbtc

#GananciasHistoricobtc


btc = [
            "BTC-USD"
]

recolector = []
for nemobtc  in btc:
  ticker = yf.Ticker(nemobtc)
  pxbtc = ticker.earnings_dates
  pxbtc.name = nemobtc
  
  recolector += [pxbtc]

earnings_datesbtc = pd.concat(recolector, axis = 1)
earnings_datesbtc

##quarterly_earnings
btc = [
            "BTC-USD"
]

recolector = []
for nemobtc  in btc:
  ticker = yf.Ticker(nemobtc)
  pxbtc = ticker.quarterly_earnings
  pxbtc.name = nemobtc
  
  recolector += [px]

quarterly_cashflowAA = pd.concat(recolector, axis = 1)
quarterly_cashflowAA

#InstitucionalHoldersAAPL


btc = [
            "BTC-USD"
]

recolector = []
for nemobtc  in btc:
  ticker = yf.Ticker(nemobtc)
  pxbtc = ticker.institutional_holders
  pxbtc.name = nemobtc
  
  recolector += [pxbtc]

institutional_holdersAA = pd.concat(recolector, axis = 1)
institutional_holdersAA

